{"version":3,"sources":["components/NavBar.js","components/EventForm.js","components/AppCalendar.js","components/common/pagination.js","services/paginationService.js","components/common/filtering.js","services/stagesService.js","components/HistoryTable.js","components/ApplicationsTable.js","components/AppForm.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","href","EventForm","props","console","log","eventdata","action","method","for","style","type","id","name","value","title","placeholder","start","end","Stage","onClick","evt","a","fetch","headers","redirect","referrerPolicy","body","JSON","stringify","moment","locale","localizer","momentLocalizer","AppCalendar","useState","setevents","invites","events","onSelectEvent","event","startAccessor","endAccessor","height","width","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","_","range","pages","aria-label","class","map","page","paginate","items","pageNumber","startIndex","slice","take","Filters","textProperty","valueProperty","onItemSelect","selectedItem","item","stage","stages","HistoryTable","posts","onDelete","onEdit","scope","post","DateApplied","Company","Role","Type","StageDate","JobDescription","_id","applyFilters","selectedStage","tableData","filter","p","ApplicationsTable","setTableData","setCurrentPage","s","setSelectedStage","filtered","setFiltered","setPosts","dir","fetchData","then","res","json","_posts","deleteData","response","success","alert","message","useEffect","selected","length","newPosts","AppForm","edit","itemDetails","url","setUrl","RecruiterInfo","setFields","rows","App","setinvites","getInv","_invites","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff6d3cf6.chunk.js","sourcesContent":["import React from \"react\" ;\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction NavBar(){\n    return(\n    <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n      <h5 className=\"my-0 mr-md-auto font-weight-normal\">AppTrack</h5>\n      <nav className=\"my-2 my-md-0 mr-md-3\">\n        <a className=\"p-2 text-dark\" href=\"/\">Calendar</a>\n        <a className=\"p-2 text-dark\" href=\"/newApplication\">Enter Application</a>\n        <a className=\"p-2 text-dark\" href=\"/appliedHistory\">History</a>\n      </nav>\n    </div>\n);\n}\nexport default NavBar;","import React from \"react\";\n/*import { render } from \"react-dom\";*/\nimport \"../css/form.css\";\n\n\n\nfunction EventForm(props){\n console.log(\"Event form\" , props.eventdata);\n\n    return(    \n\n      <div className = \"align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n      <div className=\"card-deck mb-3 text-center\">\n    <div className=\"card mb-6 shadow-sm\">\n      <div className=\"card-header\">\n        <h4 className=\"my-0 font-weight-normal\">Add Stage</h4>\n      </div>\n      <div className=\"card-body\">\n         <form action=\"/createappevent\" method=\"Post\">\n        <div className=\"form-group row\">\n          <label for=\"company\" className=\"col-10 control-label\" style={{\"textAlign\": \"left\"}}>Company</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"text\" id=\"company\" name=\"title\"/>\n          </div>\n        </div>\n      \n       \n     \n        <div className=\"form-group row\">\n          <label for=\"appliedDate\" className=\"col-10 control-label\" style={{\"textAlign\": \"left\"}}>Start Date</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"date\"  id=\"appliedDate1\" name=\"start\" />\n          </div>\n        </div>\n\n      <div className=\"form-group row\">\n          <label for=\"appliedDate\" className=\"col-10 control-label\" style={{\"textAlign\": \"left\"}}>End Date</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"date\"  id=\"appliedDate2\" name=\"end\" />\n          </div>\n        </div>\n\n        <div className=\"form-group row\">\n          <label for=\"stage\" className=\"col-10 control-label\" style={{\"textAlign\": \"left\"}}>Stage</label>\n          <div className=\"col-10\">\n            <select className=\"form-control\" id=\"stage\" name=\"Stage\">\n              <option>Applied/Apply</option>\n              <option>Application Deadline</option>\n              <option>Online Assessment</option>\n              <option>Interview</option>\n              <option>Follow Up</option>\n            </select>\n          </div>\n        </div>\n\n        \n        <button type=\"submit\" className=\"btn btn-lg btn-block btn-outline-primary\">Submit</button>\n      </form>\n      </div>\n    </div>\n    <div className=\"card mb-6 shadow-sm\">\n      <div className=\"card-header\">\n        <h4 className=\"my-0 font-weight-normal\">Event Details</h4>\n      </div>\n      <div className=\"card-body\">\n\n\n <form action=\"/updateappevent\" method=\"Post\">\n       \n        <div className=\"form-group row\">\n          <label for=\"company\" className=\"col-10 control-label\" style={{\"textAlign\": \"left\"}}>Company</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"text\" value ={props.eventdata.title} id=\"company\" name=\"title\"/>\n          </div>\n        </div>\n      \n       \n     \n        <div className=\"form-group row\">\n          <label for=\"appliedDate\" className=\"col-10 control-label\" style={{\"textAlign\": \"left\"}}>Start Date</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" placeholder = {props.eventdata.start} type=\"date\"  id=\"appliedDate1\" name=\"start\" />\n          </div>\n        </div>\n\n      <div className=\"form-group row\">\n          <label for=\"appliedDate\" className=\"col-10 control-label\" style={{\"textAlign\": \"left\"}}>End Date</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"date\"  id=\"appliedDate2\" name=\"end\" placeholder = {props.eventdata.end} />\n          </div>\n        </div>\n\n        <div className=\"form-group row\">\n          <label for=\"stage\" className=\"col-10 control-label\" style={{\"textAlign\": \"left\"}}>Stage</label>\n          <div className=\"col-10\">\n            <select className=\"form-control\" id=\"stage\" name=\"Stage\" placeholder = {props.eventdata.Stage}>\n              <option>Applied/Apply</option>\n              <option>Application Deadline</option>\n              <option>Online Assessment</option>\n              <option>Interview</option>\n              <option>Follow Up</option>\n            </select>\n          </div>\n        </div>\n\n        \n        <button type=\"submit\" className=\"btn btn-lg btn-block btn-outline-primary\">Update</button>\n      </form>\n        \n      <form>\n            \n        <button type=\"submit\"  onClick = {async (evt) => {\n        \n    \n    const response = await fetch(\"/delappevent\", {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify({title : props.eventdata.title}) // body data type must match \"Content-Type\" header\n  });\n         \n\n          }\n\n        }\n\n\n         className=\"btn btn-lg btn-block btn-outline-primary\">Delete</button>\n      </form>\n\n      \n      </div>\n    </div>\n  </div>\n    </div>);\n\n  }\nexport default EventForm;","import React, { useState, useEffect } from \"react\";\n/*import { render } from \"react-dom\";*/\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport EventForm from \"./EventForm.js\";\nmoment.locale(\"en-hi\");\nconst localizer = momentLocalizer(moment);\n//empty object for now\n\nfunction AppCalendar(props) {\n const [eventdata, setevents] = useState([]);\n  console.log(\"Get props\", props.invites);\n\n  return (\n    <div>\n      <div className=\"align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n        <Calendar\n          localizer={localizer}\n          events={props.invites}\n          onSelectEvent={event => setevents(event)}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 500, width: \"100%\" }}\n        />\n    \n      </div>\n\n      <EventForm eventdata = {eventdata} />\n    </div>\n  );\n}\n/*AppCalendar.propTypes = {\n  posts: AppCalendar.func.isRequired,\n};*/\n\nexport default AppCalendar;\n\n/* */\n","import React, { useState } from 'react';\nimport _ from 'lodash';\n\nexport default function Pagination(props) {\n\n    const {itemsCount, pageSize, onPageChange, currentPage} = props;\n    console.log(currentPage);\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    const [pages] = useState(_.range(1, pagesCount + 1));\n\n    if (pagesCount <= 1) return null;\n    \n    return (\n        <div>\n            <nav aria-label=\"...\">\n                <ul class=\"pagination\">\n                    {\n                        pages.map(page => (\n                            <li class={page === currentPage ? \"page-item active\" : \"page-item\"} key={page}>\n                                <a class=\"page-link\" onClick={() => {onPageChange(page)}}>\n                                    {page}\n                                </a>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </nav>\n        </div>\n    );\n}","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items)\n        .slice(startIndex)\n        .take(pageSize)\n        .value();\n}","import React from 'react';\n\n\nexport default function Filters ({ items, textProperty, valueProperty, onItemSelect, selectedItem }) {\n    return (\n        <div>\n            <h5>Filter By</h5>\n            <ul class=\"list-group\">\n                { items.map (item => \n                    <li \n                        onClick={() => onItemSelect(item)}\n                        key={item[valueProperty]}\n                        class={(item.stage === selectedItem) ? \"list-group-item active\" : \"list-group-item\"}>\n                            {item[textProperty]}\n                    </li>\n                )}\n            </ul>\n        </div>\n    );\n}","export const stages = [\n    {id: 1, stage: \"Applied\"},\n    {id: 2, stage: \"Online Assessment\"},\n    {id: 3, stage: \"Interview\"},\n    {id: 4, stage: \"Follow Up\"},\n    {id: 5, stage: \"Offer\"},\n    {id: 6, stage: \"Accepted\"},\n    {id: 7, stage: \"Rejected\"},\n];\n\nexport function getStages() {\n    return stages.filter(s => s);\n}","import React from 'react';\n\nexport default function HistoryTable(props) {\n    const { posts, onDelete, onEdit} = props;\n\n    return(\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th scope=\"col\">Date Applied</th>\n                <th scope=\"col\">Company</th>\n                <th scope=\"col\">Role</th>\n                <th scope=\"col\">Type</th>\n                <th scope=\"col\">Stage</th>\n                <th scope=\"col\">Next Due</th>\n                <th scope=\"col\">Description</th>\n                <th></th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            { posts.map (post => \n                <tr key={post._id}>\n                <td>{post.DateApplied}</td>\n                <td>{post.Company}</td>\n                <td>{post.Role}</td>\n                <td>{post.Type}</td>\n                <td>{post.Stage}</td>\n                <td>{post.StageDate}</td>\n                <td class=\"limitText\">{post.JobDescription}</td>\n                <td><button onClick={() => onEdit(post)} type=\"button\" class=\"btn btn-primary\">Edit</button></td>\n                <td><button onClick={() => onDelete(post)} type=\"button\" class=\"btn btn-danger\">Delete</button></td>\n                </tr>  \n            )}\n            </tbody>\n        </table>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport Pagination from './common/pagination';\nimport { paginate } from '../services/paginationService';\nimport Filters from './common/filtering';\nimport {getStages} from '../services/stagesService';\nimport HistoryTable from './HistoryTable';\n// import AppForm from '../AppForm';\n\nconst applyFilters = (selectedStage, tableData) => {\n  return selectedStage && selectedStage !== \"All Stages\"\n    ? tableData.filter(p => p.Stage === selectedStage)\n    : tableData;\n}\n\nexport default function ApplicationsTable() {\n  //initialize tableData as empty when working with backend, and process data in useEffect()\n  const [tableData, setTableData] = useState([]);\n \n  const [pageSize] = useState(6);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [stages] = useState([{stage: 'All Stages'}, ...getStages()]);\n  const [selectedStage, setSelectedStage] = useState(\"All Stages\");\n  \n  const [filtered, setFiltered] = useState(applyFilters(selectedStage, tableData));\n  //apply filters before pagination\n  const [posts, setPosts] = useState(paginate(filtered, currentPage, pageSize));\n  // const [editPost, setEditPost] = useState({});\n  console.dir(posts);\n\n  const fetchData = async function () {\n    const _posts = await fetch(\"/applications\")\n    .then(res => res.json());\n    setTableData(_posts);\n  }\n\n  const deleteData = async function (post) {\n    const response = await fetch('/delAppPost', {\n      method: 'POST',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify(post)\n    }).then(res => res.json());\n    console.log(response);\n    if(response.success) {\n      alert(response.message);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  \n  \n\n  useEffect(() => {\n    setPosts(paginate(filtered, currentPage, pageSize));\n  }, [filtered, currentPage, pageSize]);\n\n  useEffect(() => {\n    setFiltered(applyFilters(selectedStage, tableData))\n  }, [tableData, selectedStage]);\n    \n\n\n  const handleDelete = (post) => {\n    console.log(\"Post to be deleted:\", post);\n    const newPosts = tableData.filter(p => p._id !== post._id);\n    setTableData(newPosts);\n    deleteData(post);\n  }\n\n  const handleEdit = (post) => {\n    console.log('Edit this post:', post);\n    // setEditPost(post);\n  }\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  }\n\n  const handleStageSelect = (selected) => {\n    setSelectedStage(selected.stage);\n    setCurrentPage(1);\n  }\n\n\n\n  return (\n    <div>\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <Filters \n              items={stages} \n              textProperty=\"stage\"\n              valueProperty=\"id\"\n              onItemSelect={handleStageSelect}\n              selectedItem={selectedStage}\n            />\n          </div>\n        {\n          (filtered.length !== 0) \n            ? \n              <div className=\"col\">\n                <p>Showing {filtered.length} applications from the database</p>\n                <HistoryTable \n                  posts={posts}\n                  onDelete = {handleDelete}\n                  onEdit = {handleEdit}\n                />\n                <Pagination \n                  itemsCount={filtered.length}\n                  pageSize={pageSize}\n                  onPageChange={handlePageChange}\n                  currentPage={currentPage}\n                />\n                {/* <AppForm edit={true} itemDetails={{\n                  Company: \"RANDOM\",\n                  DateApplied: \"\",\n                  JobDescription: \"\",\n                  RecruiterInfo: \"\",\n                  Role: \"\",\n                  Stage: \"\",\n                  StageDate: \"\",\n                  Type: \"\"\n                }}/> */}\n              </div> \n          : <p>There are no applications in the database</p>\n      }\n      </div>  \n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\n\n\nfunction AppForm ({edit, itemDetails}) {\n  const [url, setUrl] = useState(\"/appform\");\n  const [fields, setFields] = useState({\n    Company: \"\",\n    DateApplied: \"\",\n    JobDescription: \"\",\n    RecruiterInfo: \"\",\n    Role: \"\",\n    Stage: \"\",\n    StageDate: \"\",\n    Type: \"\"\n  });\n\n  useEffect(() => {\n    if (edit) {\n      setFields(itemDetails);\n      setUrl(\"/updateApplication\")\n    }\n  }, []);\n  \n  \n\n  return(    \n      <div className = \"align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n      <form action={url} method=\"POST\">\n        <p className=\"h4 mb-4\">Add application</p>\n        <div className=\"form-group row\">\n          <label for=\"company\" className=\"col-10 col-form-label\" >Company</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"text\" id=\"company\" name=\"Company\"/>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label for=\"role\" className=\"col-10 col-form-label\">Role</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"text\" id=\"role\" name=\"Role\" />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label for=\"type\" className=\"col-10 col-form-label\">Type</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"text\" id=\"type\" name=\"Type\" />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label for=\"recruiter\" className=\"col-10 col-form-label\">Recruiter Info</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"text\" id=\"recruiter\" name=\"RecruiterInfo\" />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label for=\"appliedDate\" className=\"col-10 col-form-label\">Date Applied</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"date\" id=\"appliedDate\" name=\"DateApplied\" />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label for=\"stage\" className=\"col-10 col-form-label\">Stage</label>\n          <div className=\"col-10\">\n            <select className=\"form-control\" id=\"stage\" name=\"Stage\">\n              <option>Applied</option>\n              <option>Online Assessment</option>\n              <option>Interview</option>\n              <option>Follow Up</option>\n              <option>Offer</option>\n              <option>Reject</option>\n              <option>Accepted</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label for=\"stage\" className=\"col-10 col-form-label\">Next Due Date</label>\n          <div className=\"col-10\">\n            <input className=\"form-control\" type=\"date\" id=\"stage\" name=\"StageDate\" />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label for=\"jobDesc\" className=\"col-10 col-form-label\">Job Description</label>\n          <div className=\"col-10\">\n            <textarea className=\"form-control\" id=\"jobDesc\" rows=\"3\" name=\"JobDescription\"></textarea>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        <input className=\"form-control\" type=\"ID\" value=\"\" id=\"stage\" name=\"StageDate\" />\n      </form>\n    </div>);\n\n  }\nexport default AppForm;","import React, { useState, useEffect } from \"react\" ;\nimport './App.css';\nimport NavBar from \"./components/NavBar.js\";\nimport AppCalendar from \"./components/AppCalendar.js\";\n// import History from \"./History.js\";\nimport ApplicationsTable from \"./components/ApplicationsTable\";\nimport AppForm from \"./components/AppForm.js\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  //  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  // const [show, setShow] = useState(true);\n  const [invites, setinvites] = useState([]);\n\n  const getInv = async () => {\n    console.log(\"getting Inv\");\n    try {\n      const _invites = await fetch(\"/calendar\").then((res) => res.json());\n      console.log(\"got posts\", _invites);\n      setinvites(_invites);\n    } catch (err) {\n      console.log(\"error \", err);\n    }\n  };\n\n  useEffect(() => {\n    getInv();\n  }, [])  \n\n  return (\n    <div className=\"App\">\n    <NavBar></NavBar>\n    <Router>\n        <Switch>\n          <Route path=\"/appliedHistory\">\n            <ApplicationsTable />\n          </Route>\n          <Route path=\"/newApplication\">\n            <AppForm edit={false} itemDetails={null} />\n          </Route>\n          <Route path=\"/\">\n            <AppCalendar invites = {invites}/>\n          </Route>\n        </Switch>\n    </Router>\n    \n    \n\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}